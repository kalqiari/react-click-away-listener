{"version":3,"file":"react-click-away-listener.umd.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, FunctionComponent } from 'react';\n\ntype MouseEvents = 'click' | 'mousedown' | 'mouseup';\ntype TouchEvents = 'touchstart' | 'touchend';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n\tonClickAway: (event: MouseEvent | TouchEvent) => void;\n\tmouseEvent?: MouseEvents;\n\ttouchEvent?: TouchEvents;\n\tas?: React.ElementType;\n}\n\nconst ClickAwayListener: FunctionComponent<Props> = ({\n\tas = 'div',\n\tonClickAway,\n\tmouseEvent = 'click',\n\ttouchEvent = 'touchend',\n\t...props\n}) => {\n\tlet node = useRef<HTMLElement>(null);\n\n\tuseEffect(() => {\n\t\tconst handleEvents = (event: MouseEvent | TouchEvent): void => {\n\t\t\tif (node.current && node.current.contains(event.target as Node)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tonClickAway(event);\n\t\t};\n\n\t\tdocument.addEventListener(mouseEvent, handleEvents);\n\t\tdocument.addEventListener(touchEvent, handleEvents);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(mouseEvent, handleEvents);\n\t\t\tdocument.removeEventListener(touchEvent, handleEvents);\n\t\t};\n\t}, [mouseEvent, onClickAway, touchEvent]);\n\n\treturn React.createElement(as, { ref: node, ...props });\n};\n\nexport default ClickAwayListener;\n"],"names":["as","onClickAway","mouseEvent","touchEvent","props","node","useRef","useEffect","handleEvents","event","current","contains","target","document","addEventListener","removeEventListener","React","createElement","ref"],"mappings":"s+BAYoD,oBACnDA,GAAAA,aAAK,QACLC,IAAAA,gBACAC,WAAAA,aAAa,cACbC,WAAAA,aAAa,aACVC,sDAECC,EAAOC,SAAoB,aAE/BC,aAAU,eACHC,EAAe,SAACC,GACjBJ,EAAKK,SAAWL,EAAKK,QAAQC,SAASF,EAAMG,SAIhDX,EAAYQ,WAGbI,SAASC,iBAAiBZ,EAAYM,GACtCK,SAASC,iBAAiBX,EAAYK,GAE/B,WACNK,SAASE,oBAAoBb,EAAYM,GACzCK,SAASE,oBAAoBZ,EAAYK,MAExC,CAACN,EAAYD,EAAaE,IAEtBa,EAAMC,cAAcjB,mWAAMkB,IAAKb,GAASD"}